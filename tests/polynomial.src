// ====== struct declarations ====== //
struct POLYNOMIAL {
	public func evaluate(x: float) -> float;
};

struct LINEAR inherits POLYNOMIAL {
	private let a: float;
	private let b: float;
	public  func build(A: float, B: float) -> LINEAR;
	public  func evaluate(x: float) -> float;
};

struct QUADRATIC inherits POLYNOMIAL {
	private let a: float;
	private let b: float;
	private let c: float;
	public  func build(A: float, B: float, C: float) -> QUADRATIC;
	public  func evaluate(x: float) -> float;
};

// ====== struct implementations ====== //
impl POLYNOMIAL {   
  func evaluate(x: float) -> float
  {
    return (0);
  }
}
  
impl QUADRATIC { 
  func evaluate(x: float) -> float
  {
    let result: float;
    //Using Horner's method
    result = a;
    result = result * x + b;
    result = result * x + c;
    return (result);
  }
  func build(A: float, B: float, C: float) -> QUADRATIC 
  {
    let new_function: QUADRATIC ;
    new_function.a = A;
    new_function.b = B;
    new_function.c = C;
    return (new_function);
  }
}
  
impl LINEAR {
  func build(A: float, B: float) -> LINEAR 
  {
    let new_function: LINEAR;
    new_function.a = A;
    new_function.b = B;
    return (new_function);
  }
  func evaluate(x: float) -> float 
  {
    let result: float;
    result = 0.0;
    result = a * x + b;
    return (result);
  }
} 

// ====== main ====== //
func main() -> void
{
  let f1: LINEAR;
  let f2: QUADRATIC;
  let counter: integer;
  f1 = f1.build(2, 3.5);
  f2 = f2.build(-2.0, 1.0, 0.0);
  counter = 1;
	
  while(counter <= 10)
  {
    write(counter);
    write(f1.evaluate(counter));
    write(f2.evaluate(counter));
  };
}
/*
1.   |X| global symbol table
2.   |X| class symbol table
3.1  |X| class data member
3.2  |X| function's local variable
4.1  |X| free function
4.2  |X| member function
6.1  | | undeclared member function definition
6.2  | | undefined member function declaration
8.1  | | multiply declared class
8.2  | | multiply declared free function
8.3  | | multiply declared identifier in class
8.4  | | multiply declared identifier in function
8.5  | | shadowed inherited data member
9.1  | | Overloaded free function
9.2  | | Overloaded member function
9.3  | | Overridden inherited member function
10.1 | | Type error in expression
10.2 | | Type error in assignment statement 
10.3 | | Type error in return statement
11.1 | | Undeclared local variable
11.2 | | Undeclared data member
11.3 | | Undeclared member function
11.4 | | Undeclared free function
11.5 | | Undeclared class
12.1 | | Function call with wrong number of parameters
12.2 | | Function call with wrong type of parameters
13.1 | | Use of array with wrong number of dimensions
13.2 | | Array index is not an integer
13.3 | | Array parameter using wrong number of dimensions
14.1 | | Circular class dependency
15.1 | | "." operator used on non-class type
*/